{:enums
 {:role
  {:description "User account roles"
   :values      [:admin :member :maintenance]}}


 :objects
 {:User
  {:description "A user account registered in MainTraq."
   :fields
   {:id          {:type        (non-null :Long)
                  :description "Unique ID for this user."
                  :resolve     (:get :db/id)}
    :email       {:type        (non-null :String)
                  :description "Unique email associated with this user."
                  :resolve     (:get :user/email)}
    :username    {:type        (non-null :String)
                  :description "Unique username associated with this user."
                  :resolve     (:get :user/username)}
    :first_name  {:type        :String
                  :description "User's first name, if available."
                  :resolve     (:get :user/first-name)}
    :middle_name {:type        :String
                  :description "User's middle name, if available."
                  :resolve     (:get :user/middle-name)}
    :last_name   {:type        :String
                  :description "User's last name, if available."
                  :resolve     (:get :user/last-name)}
    :full_name   {:type        :String
                  :description "User's full name, composed of their first, middle and last names, if available."
                  :resolve     :users/full-name}
    :activated   {:type        (non-null :Boolean)
                  :description "Activation status of this user account."
                  :resolve     (:get :user/activated)}
    :role        {:type        (non-null :role)
                  :description "This user's account role."
                  :resolve     :users/role}}}}


 :queries
 {:user {:type        :User
         :description "Query a single user by their unique identifier."
         :args        {:id {:type (non-null :Long)}}
         :resolve     :users/retrieve}}


 :input-objects
 {;;; User
  :user_create_input
  {:description "Input fields to create an account with."
   :fields      {:username         {:type (non-null :String)}
                 :email            {:type (non-null :String)}
                 :password         {:type (non-null :String)}
                 :confirm_password {:type        (non-null :String)
                                    :description "Password confirmation. Should be the same value that is `password`."}
                 :first_name       {:type :String}
                 :middle_name      {:type :String}
                 :last_name        {:type :String}}}}


 :mutations
 {:user_create {:type        :User
                :description "Create a user."
                :args        {:input {:type        :user_create_input
                                      :description "Input to create a user account with."}}
                :resolve     :users/create!}}}
